@page "/departamentos"
@inject DepartamentoServico departamentoServico
@inject IJSRuntime JSRuntime
@using ExemploBlazorADOFuncionario.Entidades
@using ExemploBlazorADOFuncionario.Servico
@rendermode InteractiveServer
<h3>Departamentos</h3>

<button class="btn btn-primary" @onclick="AbrirModalNovoDepartamento">Adicionar Departamentos</button>

<table class="table mt-3">
    <thead>
        <tr>
            <th>Nome</th>
            <th>Sigla</th>
            <th>Departamento</th>
        </tr>
    </thead>
    <tbody>
        @if (departamentos is not null)
        {


            @foreach (var departamento in departamentos)
            {
                <tr>
                    <td>@departamento.Nome</td>
                    <td>@departamento.Sigla</td>
                    <td>
                        <button class="btn btn-secondary" @onclick="() => AbrirModalEditarDepartamento(departamento)">Editar</button>
                        <button class="btn btn-danger" @onclick="() => ConfirmarDeletar(departamento.Id)">Deletar</button>
                    </td>
                </tr>



            }
        }
    </tbody>
</table>
@if (departamentos is not null)
{
    <div class="grid">
        <QuickGrid class="table table-striped table-hover mt-3" Items="@departamentos" Pagination="@pagination">
            <PropertyColumn Property="@(p => p.Nome)" Title="Nome" Sortable="true" />
            <PropertyColumn Property="@(p => p.Sigla)" Title="Sigla" Sortable="true" />
            <PropertyColumn Property="@(p => p.Telefone)" Title="Telefone" Sortable="true" />
            <TemplateColumn Title="Ações" class="d-flex justify-content-around">
                <div class="d-flex justify-content-around">
                    <button class="btn btn-secondary btn-sm m-2" @onclick="@(() => AbrirModalEditarDepartamento(context))">Editar</button>
                    <button class="btn btn-danger btn-sm m-2" @onclick="@(() => ConfirmarDeletar(context.Id))">Excluir</button>
                </div>
            </TemplateColumn>
        </QuickGrid>
       
    </div>
    <div class="page-size-chooser">
        Departamentos:
        <select @bind="@pagination.ItemsPerPage">
            <option> 5</option>
            <option> 10</option>
        </select>

    </div>
    <Paginator State="@pagination" />
}
@if (exibirModal)
{
    <EditForm Model="@departamentoEditando" OnValidSubmit="SalvarProduto">
        <div class="modal" style="display:block" tabindex="-1">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">@modalTitulo</h5>
                        <button type="button" class="btn-close" aria-label="Close" @onclick="FecharModal"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="nome" class="form-label">Nome:</label>
                            <InputText id="nome" class="form-control" @bind-Value="departamentoEditando.Nome" />
                        </div>
                        <div class="mb-3">
                            <label for="sigla" class="form-label">Sigla:</label>
                            <InputText id="sigla" class="form-control" @bind-Value="departamentoEditando.Sigla" />
                        </div>
                        <div class="mb-3">
                            <label for="email" class="form-label">e-mail:</label>
                            <InputText id="email" class="form-control" @bind-Value="departamentoEditando.Email" />
                        </div>
                        <div class="mb-3">
                            <label for="telefone" class="form-label">Telefone:</label>
                            <InputText id="telefone" class="form-control" @bind-Value="departamentoEditando.Telefone" />
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="FecharModal">Cancelar</button>
                        <button type="submit" class="btn btn-primary">Salvar</button>
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
}

@code {
    private IQueryable<Departamento> departamentos;
    private Departamento departamentoEditando = new Departamento();
    private bool exibirModal = false;
    private string modalTitulo = "";
    PaginationState pagination = new PaginationState{ItemsPerPage=5};

    protected override async Task OnInitializedAsync()
    {
        departamentos = (await departamentoServico.ObterTodosAsync()).AsQueryable();
    }

    private void AbrirModalNovoDepartamento()
    {
        departamentoEditando = new Departamento(); // Cria uma nova instância para adição
        modalTitulo = "Adicionar Produto";
        exibirModal = true;
    }

    private void AbrirModalEditarDepartamento(Departamento departamento)
    {
        departamentoEditando = departamento; // Carrega o produto existente para edição
        modalTitulo = "Editar Departamento";
        exibirModal = true;
    }

    private async Task SalvarProduto()
    {
        try
        {
            if (departamentoEditando.Id == 0) // Se o ID é 0, então é um novo produto
            {
                await departamentoServico.AdicionarDepartamentoAsync(departamentoEditando);
            }
            else // Caso contrário, é uma atualização
            {
                await departamentoServico.AtualizarDepartamentoAsync(departamentoEditando);
            }

            exibirModal = false;
            departamentoEditando = new Departamento(); // Reseta o produtoEditando para limpar o formulário
            departamentos = (await departamentoServico.ObterTodosAsync()).AsQueryable(); // Atualiza a lista de produtos
        }
        catch(Exception ex)
        {
            string msg = ex.Message;
        }
        
    }

    private async Task ConfirmarDeletar(int departamentoId)
    {
        var confirmado = await JSRuntime.InvokeAsync<bool>("confirma", "Tem certeza que deseja deletar este produto?");
        if (confirmado)
        {
            await departamentoServico.DeletarDepartamentoAsync(departamentoId);
            departamentos = (await departamentoServico.ObterTodosAsync()).AsQueryable();// Atualiza a lista após a exclusão
        }
    }

    private void FecharModal()
    {
        exibirModal = false;
    }
}
